# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dmss_api.models.base_model_ import Model
from dmss_api import util


class InlineObject2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directory=None):  # noqa: E501
        """InlineObject2 - a model defined in OpenAPI

        :param directory: The directory of this InlineObject2.  # noqa: E501
        :type directory: str
        """
        self.openapi_types = {
            'directory': str
        }

        self.attribute_map = {
            'directory': 'directory'
        }

        self._directory = directory

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object_2 of this InlineObject2.  # noqa: E501
        :rtype: InlineObject2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directory(self):
        """Gets the directory of this InlineObject2.


        :return: The directory of this InlineObject2.
        :rtype: str
        """
        return self._directory

    @directory.setter
    def directory(self, directory):
        """Sets the directory of this InlineObject2.


        :param directory: The directory of this InlineObject2.
        :type directory: str
        """
        if directory is None:
            raise ValueError("Invalid value for `directory`, must not be `None`")  # noqa: E501

        self._directory = directory
