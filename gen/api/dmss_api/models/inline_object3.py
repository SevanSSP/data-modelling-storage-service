# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dmss_api.models.base_model_ import Model
from dmss_api import util


class InlineObject3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None):  # noqa: E501
        """InlineObject3 - a model defined in OpenAPI

        :param type: The type of this InlineObject3.  # noqa: E501
        :type type: str
        """
        self.openapi_types = {
            'type': str
        }

        self.attribute_map = {
            'type': 'type'
        }

        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject3':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object_3 of this InlineObject3.  # noqa: E501
        :rtype: InlineObject3
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this InlineObject3.


        :return: The type of this InlineObject3.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InlineObject3.


        :param type: The type of this InlineObject3.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501
        if type is not None and len(type) < 5:
            raise ValueError("Invalid value for `type`, length must be greater than or equal to `5`")  # noqa: E501

        self._type = type
